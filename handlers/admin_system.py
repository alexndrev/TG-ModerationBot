from aiogram import Bot, Dispatcher, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from configure.config import *
from configure.database import *
from datetime import datetime
from datetime import timedelta

storage = MemoryStorage()
bot = Bot(token=token, parse_mode=parse_mode)
dp = Dispatcher(bot, storage=storage)


@dp.message_handler(text=['ban', '–±–∞–Ω'], is_chat_admin=True)
async def ban_system(message):
    name1 = message.from_user.get_mention(as_html=True)
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
        return
    comment = " ".join(message.text.split()[1:])
    await bot.kick_chat_member(message.chat.id, message.reply_to_message.from_user.id, types.ChatPermissions(False))
    await message.reply(f'üëÆ | <b>–†–µ—à–µ–Ω–∏–µ –±—ã–ª–æ –ø—Ä–∏–Ω—è—Ç–æ:</b> {name1}\nüõë | <b>–ó–∞–±–∞–Ω–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>: <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>\n‚è∞ | <b>–°—Ä–æ–∫</b>: –Ω–∞–≤—Å–µ–≥–¥–∞\nüìÉ | <b>–ü—Ä–∏—á–∏–Ω–∞</b>: {comment}',  parse_mode='html')


@dp.message_handler(text=['kick', '–∫–∏–∫'], is_chat_admin=True)
async def kick_system(message):
    name1 = message.from_user.get_mention(as_html=True)
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
        return
    comment = " ".join(message.text.split()[1:])
    await bot.kick_chat_member(message.chat.id, message.reply_to_message.from_user.id, types.ChatPermissions(False))
    await message.reply(f'üëÆ | <b>–†–µ—à–µ–Ω–∏–µ –±—ã–ª–æ –ø—Ä–∏–Ω—è—Ç–æ:</b> {name1}\nüõë | <b>/–ö–∏–∫–Ω—É–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>: <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>\n‚è∞ | <b>–°—Ä–æ–∫</b>: –Ω–∞–≤—Å–µ–≥–¥–∞\nüìÉ | <b>–ü—Ä–∏—á–∏–Ω–∞</b>: {comment}',  parse_mode='html')


@dp.message_handler(text=['unban', '–∞–Ω–±–∞–Ω'], is_chat_admin=True)
async def unban_system(message):
    name1 = message.from_user.get_mention(as_html=True)
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
        return
    await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, types.ChatPermissions(True, True, True, True))
    await message.reply(f'üëÆ | <b>–†–µ—à–µ–Ω–∏–µ –±—ã–ª–æ –ø—Ä–∏–Ω—è—Ç–æ:</b> {name1}\n‚úÖ | <b>–†–∞–∑–±–∞–Ω–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>: <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>',  parse_mode='html')


@dp.message_handler(commands=['mute'], is_chat_admin=True)
async def mute_system(message):
    if message.from_user.id == 787080961 or 227342603 or 1143859214:
        name1 = message.from_user.get_mention(as_html=True)
        if not message.reply_to_message:
            await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
            return
        try:
            muteint = int(message.text.split()[1])
            mutetype = message.text.split()[2]
            comment = " ".join(message.text.split()[3:])
        except IndexError:
            await message.reply('–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤!\n–ü—Ä–∏–º–µ—Ä:\n`/mute 1 —á –ø—Ä–∏—á–∏–Ω–∞`')
            return
        if mutetype == "—á" or mutetype == "—á–∞—Å–æ–≤" or mutetype == "—á–∞—Å":
            dt = datetime.now() + timedelta(hours=muteint)
            timestamp = dt.timestamp()
            await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, types.ChatPermissions(False), until_date=timestamp)
            await message.reply(f'üëÆ | <b>–†–µ—à–µ–Ω–∏–µ –±—ã–ª–æ –ø—Ä–∏–Ω—è—Ç–æ:</b> {name1}\nüõë | <b>–ù–∞—Ä—É—à–∏—Ç–µ–ª—å:</b> <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>\n‚è∞ | <b>–°—Ä–æ–∫ –Ω–∞–∫–∞–∑–∞–Ω–∏—è:</b> {muteint} {mutetype}\nüìÉ | <b>–ü—Ä–∏—á–∏–Ω–∞:</b> {comment}',  parse_mode='html')
        if mutetype == "–º" or mutetype == "–º–∏–Ω—É—Ç" or mutetype == "–º–∏–Ω—É—Ç—ã":
            dt = datetime.now() + timedelta(minutes=muteint)
            timestamp = dt.timestamp()
            await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, types.ChatPermissions(False), until_date = timestamp)
            await message.reply(f'üëÆ | <b>–†–µ—à–µ–Ω–∏–µ –±—ã–ª–æ –ø—Ä–∏–Ω—è—Ç–æ:</b> {name1}\nüõë | <b>–ù–∞—Ä—É—à–∏—Ç–µ–ª—å:</b> <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>\n‚è∞ | <b>–°—Ä–æ–∫ –Ω–∞–∫–∞–∑–∞–Ω–∏—è:</b> {muteint} {mutetype}\nüìÉ | <b>–ü—Ä–∏—á–∏–Ω–∞:</b> {comment}',  parse_mode='html')
        if mutetype == "–¥" or mutetype == "–¥–Ω–µ–π" or mutetype == "–¥–µ–Ω—å":
            dt = datetime.now() + timedelta(days=muteint)
            timestamp = dt.timestamp()
            await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, types.ChatPermissions(False), until_date = timestamp)
            await message.reply(f'üëÆ | <b>–†–µ—à–µ–Ω–∏–µ –±—ã–ª–æ –ø—Ä–∏–Ω—è—Ç–æ:</b> {name1}\nüõë | <b>–ù–∞—Ä—É—à–∏—Ç–µ–ª—å:</b> <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>\n‚è∞ | <b>–°—Ä–æ–∫ –Ω–∞–∫–∞–∑–∞–Ω–∏—è:</b> {muteint} {mutetype}\nüìÉ | <b>–ü—Ä–∏—á–∏–Ω–∞:</b> {comment}',  parse_mode='html')
    else:
        await message.reply("–ï–π, –µ–π, –µ–π. –¢—ã –ø–æ—Ö–æ–¥—É —á—Ç–æ-—Ç–æ –ø–æ–ø—É—Ç–∞–ª. –¢–µ–±–µ –Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É üôä")


@dp.message_handler(text=['unmute', '–∞–Ω–º—É—Ç'], is_chat_admin=True)
async def unmute_system(message):
    name1 = message.from_user.get_mention(as_html=True)
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
        return
    await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, types.ChatPermissions(True, True, True, True))
    await message.reply(f'üëÆ | <b>–†–µ—à–µ–Ω–∏–µ –±—ã–ª–æ –ø—Ä–∏–Ω—è—Ç–æ:</b> {name1}\nüîä | –†–∞–∑–º—É—Ç–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>', parse_mode='html')


def register_handlers_admin_system(dp: Dispatcher):
    dp.register_message_handler(ban_system, text=['ban', '–±–∞–Ω'], is_chat_admin=True)
    dp.register_message_handler(kick_system, text=['kick', '–∫–∏–∫'], is_chat_admin=True)
    dp.register_message_handler(unban_system, text=['unban', '–∞–Ω–±–∞–Ω'], is_chat_admin=True)
    dp.register_message_handler(mute_system, commands=['mute'], is_chat_admin=True)
    dp.register_message_handler(unmute_system, text=['unmute', '–∞–Ω–º—É—Ç'], is_chat_admin=True)